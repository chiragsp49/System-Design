package cachedebouncing;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

public class Server {
	static ConcurrentHashMap<Integer, Employee> cache = new ConcurrentHashMap<Integer, Employee>();
	static AtomicInteger counter = new AtomicInteger(0);
	
	
	public static void main(String[] args) {
		cache.put(2, new Employee())
		
		Thread server1 = new Thread(new Runnable() {
			
			public void run() {
				for(int i=0;i<100;i++) {
					try {
						fetchEmployeeDetails(2);
						System.out.println("Server 1 "+counter.get());
					} catch (ClassNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			}
		});
		
		Thread server2 = new Thread(new Runnable() {
			
			public void run() {
				for(int i=0;i<100;i++) {
					try {
						fetchEmployeeDetails(2);
						System.out.println("Server 2 "+counter.get());
					} catch (ClassNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		});
		
		Thread server3 = new Thread(new Runnable() {
			
			public void run() {
				try {
					fetchEmployeeDetails(2);
					System.out.println("Server 3 "+counter.get());
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
		});
		
		
		server1.start();
		server2.start();
		server3.start();
	}
	
	public static Employee fetchEmployeeDetails(int key) throws ClassNotFoundException, SQLException {
		if(cache.contains(key)) {
			return cache.get(key);
		}else {
			Employee emp =  fetchFromDB(key);
			counter.incrementAndGet();
			cache.put(key, emp);
			return emp;
		}
	}
	
	
	public static Employee fetchFromDB(int key) throws ClassNotFoundException, SQLException {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/office","root","admin");
			Statement statement = conn.createStatement();
			ResultSet rst =  statement.executeQuery("SELECT * from employees where id = "+key);
			
			Employee emp = new Employee();
			while(rst.next()) {
				emp.setId(rst.getInt("id"));
				emp.setDept(rst.getString("dept"));
				emp.setName(rst.getString("name"));
			}
			return emp;
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			
			throw new ClassNotFoundException(e.getMessage());

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new SQLException(e.getMessage());
			
		}
		
		
	}
}
